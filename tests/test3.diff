1,82d0
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  true
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  4
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = x
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  100
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = y
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  "ok"
< TYPE - Exp -> ID/Call/NUM ...  string
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  print
< TYPE - CALL -> ID LPAREN Exp RPAREN void
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< Node
< IN - Statement -> Call SC 
< OUT - Statement -> Call SC 
84,170d1
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  ADDITIVE
< TYPE - Exp -> Exp OP Exp  int
< OUT - Exp -> Exp OP Exp  
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  readi
< TYPE - CALL -> ID LPAREN Exp RPAREN int
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  readi
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = z
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  "bad"
< TYPE - Exp -> ID/Call/NUM ...  string
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  print
< TYPE - CALL -> ID LPAREN Exp RPAREN void
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< Node
< IN - Statement -> Call SC 
< OUT - Statement -> Call SC 
< Node
< Node
< Node
< IN - Statement -> RETURN SC / Break SC / Continute SC 
< OUT - Statement -> RETURN SC / Break SC / Continute SC
< Node
174,187d4
< Node
< Node
< Type
< Node
< Node
< Node
< IN - Statement -> Type ID SC 
< OUT - Statement -> Type ID SC 
< Node
< Node
< Node
< IN - Statement -> RETURN SC / Break SC / Continute SC 
< OUT - Statement -> RETURN SC / Break SC / Continute SC
< Node
193,324d9
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  true
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  true
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = x
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  false
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = y
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  AND
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  3
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  2
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Exp
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  bool
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  5
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  2
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  AND
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Exp
< Node
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  OR
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< IN - Statement -> ID ASSIGN Exp SC  
< OUT - Statement -> ID ASSIGN Exp SC  
326,344d10
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  "bad grade"
< TYPE - Exp -> ID/Call/NUM ...  string
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  print
< TYPE - CALL -> ID LPAREN Exp RPAREN void
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< Node
< IN - Statement -> Call SC 
< OUT - Statement -> Call SC 
346,349d11
< Node
< Node
< Node
< IN - Statement -> RETURN SC / Break SC / Continute SC 
