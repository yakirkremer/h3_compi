1,72d0
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  4
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = x
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  100
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = y
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  "ok"
< TYPE - Exp -> ID/Call/NUM ...  string
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  print
< TYPE - CALL -> ID LPAREN Exp RPAREN void
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< Node
< IN - Statement -> Call SC 
< OUT - Statement -> Call SC 
74,155d1
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  RELATIONAL
< TYPE - Exp -> Exp OP Exp  bool
< OUT - Exp -> Exp OP Exp  
< Node
< Node
< Node
< Type
< Node
< Node
< Node
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  x
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  y
< TYPE - Exp -> ID/Call/NUM ...  byte
< OUT - Exp -> ID/Call/NUM ...  
< Node
< IN - Exp -> Exp OP Exp  
< Operation - Exp -> Exp OP Exp  ADDITIVE
< TYPE - Exp -> Exp OP Exp  int
< OUT - Exp -> Exp OP Exp  
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  readi
< TYPE - CALL -> ID LPAREN Exp RPAREN int
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  readi
< TYPE - Exp -> ID/Call/NUM ...  int
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - Statement -> Type ID ASSIGN Exp SC 
< ID = z
< OUT - Statement -> Type ID ASSIGN Exp SC 
< Node
< Node
< Node
< Node
< IN - Exp -> ID/Call/NUM ...  
< VALUE - Exp -> ID/Call/NUM ...  "bad"
< TYPE - Exp -> ID/Call/NUM ...  string
< OUT - Exp -> ID/Call/NUM ...  
< Node
< Node
< IN - CALL -> ID LPAREN Exp RPAREN  
< VALUE - CALL -> ID LPAREN Exp RPAREN  print
< TYPE - CALL -> ID LPAREN Exp RPAREN void
< OUT - CALL -> ID LPAREN Exp RPAREN  
< Node
< Node
< IN - Statement -> Call SC 
< OUT - Statement -> Call SC 
< Node
159,166d4
< Node
< Node
< Type
< Node
< Node
< Node
< IN - Statement -> Type ID SC 
< OUT - Statement -> Type ID SC 
